{"ast":null,"code":"var _jsxFileName = \"/Users/pablomartincarrion/Documents/IRONHACK/module2/day01/newProject/mini-project-react/mini-project/src/pages/Update.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Update = ({\n  recipes,\n  setRecipes\n}) => {\n  _s();\n  const [name, setNameRecipe] = useState();\n  const [calories, setCalories] = useState();\n  const [image, setImage] = useState();\n  const [servings, setServings] = useState();\n  const {\n    recipeId\n  } = useParams();\n  const nav = useNavigate();\n  useEffect(() => {\n    const foundRecipe = recipes.find(oneRecipe => {\n      if (oneRecipe.id == recipeId) {\n        return true;\n      }\n    });\n    console.log(\"here is the found recipe\", foundRecipe);\n    setNameRecipe(foundRecipe.name);\n    setCalories(foundRecipe.calories);\n    setImage(foundRecipe.image);\n    setServings(foundRecipe.servings);\n  }, []);\n  // \n  const handleUpdateRecipes = event => {\n    //first always prevent the default refresh of the form\n    event.preventDefault();\n\n    //this maps over all the pets and updates only the one whos id matches the params id from above\n    const mappedRecipes = recipes.map(recipe => {\n      if (recipe.id == recipeId) {\n        const updatedRecipe = {\n          name,\n          calories,\n          image,\n          servings,\n          id: recipe.id\n        };\n        return updatedRecipe;\n      } else {\n        return recipe;\n      }\n    });\n    setRecipes(mappedRecipes);\n\n    //this will navigate after we add the pet\n    nav(\"/\");\n    // \n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipe-form\",\n      onSubmit: handleCreateRecipe,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipe Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"name\",\n        type: \"text\",\n        value: name,\n        onChange: event => {\n          setNameRecipe(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Calories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"calories\",\n        type: \"text\",\n        value: calories,\n        onChange: event => {\n          setCalories(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"url of image\",\n        type: \"text\",\n        value: image,\n        onChange: event => {\n          setImage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Servings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"servings\",\n        type: \"text\",\n        value: servings,\n        onChange: event => {\n          setServings(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-new\",\n        type: \"submit\",\n        children: \"Create Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(Update, \"pBNwYxLOIyMTgaPmPfxopGIJwSU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Update","recipes","setRecipes","_s","name","setNameRecipe","calories","setCalories","image","setImage","servings","setServings","recipeId","nav","foundRecipe","find","oneRecipe","id","console","log","handleUpdateRecipes","event","preventDefault","mappedRecipes","map","recipe","updatedRecipe","children","className","onSubmit","handleCreateRecipe","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/pablomartincarrion/Documents/IRONHACK/module2/day01/newProject/mini-project-react/mini-project/src/pages/Update.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst Update = ({ recipes, setRecipes }) => {\n    const [name,setNameRecipe] = useState();\n    const [calories,setCalories] = useState();\n    const [image, setImage] = useState();\n    const [servings, setServings] = useState();\n    const { recipeId } = useParams();\n    const nav = useNavigate();\n    \n    useEffect(() => {\n        const foundRecipe = recipes.find((oneRecipe) => {\n          if (oneRecipe.id == recipeId) {\n            return true;\n          }\n        });\n        console.log(\"here is the found recipe\", foundRecipe);\n        setNameRecipe(foundRecipe.name);\n        setCalories(foundRecipe.calories);\n        setImage(foundRecipe.image);\n        setServings(foundRecipe.servings);\n      }, []);\n// \nconst handleUpdateRecipes = (event) => {\n    //first always prevent the default refresh of the form\n    event.preventDefault();\n\n    //this maps over all the pets and updates only the one whos id matches the params id from above\n    const mappedRecipes = recipes.map((recipe) => {\n      if (recipe.id == recipeId) {\n        const updatedRecipe = { name, calories, image, servings, id:recipe.id };\n        return updatedRecipe;\n      } else {\n        return recipe;\n      }\n    });\n    setRecipes(mappedRecipes);\n\n    //this will navigate after we add the pet\n    nav(\"/\");\n    // \n}\n\n  return (\n    <>\n       <form className=\"recipe-form\" onSubmit={handleCreateRecipe} >\n      <label>\n        Recipe Name:</label>\n        <input\n          placeholder=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(event) => {\n              setNameRecipe(event.target.value);\n          }}\n        />\n      \n      <label>\n        Calories:</label>\n        <input\n          placeholder=\"calories\"\n          type=\"text\"\n          value={calories}\n          onChange={(event) => {\n            setCalories(event.target.value);\n          }}\n        />\n      \n      <label>\n        Image:</label>\n        <input\n          placeholder=\"url of image\"\n          type=\"text\"\n          value={image}\n          onChange={(event) => {\n            setImage(event.target.value);\n          }}\n        />\n      \n      <label>\n        Servings:</label>\n        <input\n          placeholder=\"servings\"\n          type=\"text\"\n          value={servings}\n          onChange={(event) => {\n            setServings(event.target.value);\n          }}\n        />\n      \n      <button className=\"create-new\" type=\"submit\">Create Recipe</button>\n    </form>\n    </>\n  )\n}\n\nexport default Update\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}