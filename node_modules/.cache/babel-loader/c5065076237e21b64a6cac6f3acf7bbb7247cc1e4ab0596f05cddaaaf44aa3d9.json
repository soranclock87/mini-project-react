{"ast":null,"code":"var _jsxFileName = \"/Users/pablomartincarrion/Documents/IRONHACK/module2/day01/newProject/mini-project-react/mini-project/src/pages/Update.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Update = ({\n  recipes,\n  setRecipes\n}) => {\n  _s();\n  const [name, setNameRecipe] = useState();\n  const [calories, setCalories] = useState();\n  const [image, setImage] = useState();\n  const [servings, setServings] = useState();\n  const {\n    recipeId\n  } = useParams();\n  const nav = useNavigate();\n  useEffect(() => {\n    const foundRecipe = recipes.find(recipe => {\n      if (recipe.id == recipeId) {\n        return true;\n      }\n    });\n    console.log(\"here is the found pet\", foundRecipe);\n    setNameRecipe(foundRecipe.name);\n    setCalories(foundRecipe.calories);\n    setImage(foundRecipe.image);\n    setServings(foundRecipe.servings);\n    console.log(foundRecipe);\n  }, []);\n\n  // console.log(\"asdasdas\",recipeId)\n  const handleUpdateRecipes = event => {\n    //first always prevent the default refresh of the form\n    event.preventDefault();\n    const mappedRecipes = recipes.map(recipe => {\n      console.log(recipe.id);\n      if (recipe.id == recipeId) {\n        const updatedRecipe = {\n          name,\n          calories,\n          image,\n          servings,\n          id: recipe.id\n        };\n        console.log(\"actual recipe\", updatedRecipe);\n        return updatedRecipe;\n      } else {\n        return recipe;\n      }\n    });\n    setRecipes(mappedRecipes);\n\n    //this will navigate after we add the pet\n    nav(\"/\");\n    // \n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-page\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"recipe-form\",\n        onSubmit: handleUpdateRecipes,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"name\",\n          type: \"text\",\n          value: name,\n          onChange: event => {\n            setNameRecipe(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Calories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"calories\",\n          type: \"text\",\n          value: calories,\n          onChange: event => {\n            setCalories(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"url of image\",\n          type: \"text\",\n          value: image,\n          onChange: event => {\n            setImage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Servings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"servings\",\n          type: \"text\",\n          value: servings,\n          onChange: event => {\n            setServings(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-new\",\n          type: \"submit\",\n          children: \"Update Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Update, \"pBNwYxLOIyMTgaPmPfxopGIJwSU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useState","useEffect","Link","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Update","recipes","setRecipes","_s","name","setNameRecipe","calories","setCalories","image","setImage","servings","setServings","recipeId","nav","foundRecipe","find","recipe","id","console","log","handleUpdateRecipes","event","preventDefault","mappedRecipes","map","updatedRecipe","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/pablomartincarrion/Documents/IRONHACK/module2/day01/newProject/mini-project-react/mini-project/src/pages/Update.jsx"],"sourcesContent":["import { useState ,useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst Update = ({recipes,setRecipes}) => {\n    const [name,setNameRecipe] = useState();\n    const [calories,setCalories] = useState();\n    const [image, setImage] = useState();\n    const [servings, setServings] = useState();\n    const { recipeId } = useParams();\n    const nav = useNavigate();\n\n\n    useEffect(() => {\n      const foundRecipe = recipes.find((recipe) => {\n        if (recipe.id == recipeId) {\n          return true;\n        }\n      });\n      console.log(\"here is the found pet\", foundRecipe);\n      setNameRecipe(foundRecipe.name);\n      setCalories(foundRecipe.calories);\n      setImage(foundRecipe.image);\n      setServings(foundRecipe.servings)\n      console.log(foundRecipe);\n    }, []);\n\n    // console.log(\"asdasdas\",recipeId)\n    const handleUpdateRecipes = (event) => {\n        //first always prevent the default refresh of the form\n        event.preventDefault();\n    \n        \n        const mappedRecipes = recipes.map((recipe) => {\n          console.log(recipe.id)\n          if (recipe.id == recipeId) {\n            \n            const updatedRecipe = { name, calories, image, servings, id:recipe.id };\n            console.log(\"actual recipe\", updatedRecipe)\n            return updatedRecipe;\n          } else {\n            return recipe;\n          }\n        });\n        setRecipes(mappedRecipes);\n   \n        //this will navigate after we add the pet\n        nav(\"/\");\n        // \n    }\n    \n  return (\n    <>\n    <div className=\"content-page\">\n       <form className=\"recipe-form\" onSubmit={handleUpdateRecipes} >\n      <label>\n        Recipe Name:</label>\n        <input\n          placeholder=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(event) => {\n              setNameRecipe(event.target.value);\n          }}\n        />\n      \n      <label>\n        Calories:</label>\n        <input\n          placeholder=\"calories\"\n          type=\"text\"\n          value={calories}\n          onChange={(event) => {\n            setCalories(event.target.value);\n          }}\n        />\n      \n      <label>\n        Image:</label>\n        <input\n          placeholder=\"url of image\"\n          type=\"text\"\n          value={image}\n          onChange={(event) => {\n            setImage(event.target.value);\n          }}\n        />\n      \n      <label>\n        Servings:</label>\n        <input\n          placeholder=\"servings\"\n          type=\"text\"\n          value={servings}\n          onChange={(event) => {\n            setServings(event.target.value);\n          }}\n        />\n      \n      <button className=\"create-new\" type=\"submit\">Update Recipe</button>\n    </form>\n    </div>\n    </>\n  )\n}\n\nexport default Update\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}